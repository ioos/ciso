name: Wheels

# no permissions by default
permissions: {}

on:
  pull_request:
  push:
  release:
    types:
      - published

jobs:
  build_bdist:
    name: "Build ${{ matrix.os }} (${{ matrix.arch }}) wheels"
    runs-on: ${{ matrix.os }}
    permissions:
      contents: read
      actions: write  # for uploading artifacts
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-22.04
            arch: x86_64
          - os: ubuntu-24.04-arm
            arch: aarch64
          - os: windows-2022
            arch: AMD64
          - os: macos-14
            arch: arm64
          - os: macos-13
            arch: x86_64

    steps:
    - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8  # v5.0.0
      with:
        fetch-depth: 0
        persist-credentials: false

    - name: "Building ${{ matrix.os }} (${{ matrix.arch }}) wheels"
      uses: pypa/cibuildwheel@c923d83ad9c1bc00211c5041d0c3f73294ff88f6  # v3.1.4
      env:
        CIBW_SKIP: "pp* cp36-* cp37-* cp38-* *-musllinux*"
        CIBW_ARCHS: ${{ matrix.arch }}
        CIBW_BUILD_FRONTEND: build
        CIBW_MANYLINUX_X86_64_IMAGE: manylinux_2_28
        CIBW_TEST_REQUIRES: pytest
        CIBW_TEST_COMMAND: >
          python -c "import ciso; print(f'ciso v{ciso.__version__}')" &&
          python -m pytest --pyargs ciso

    - uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02  # v4.6.2
      with:
        name: pypi-artifacts-${{ matrix.os }}-${{ matrix.arch }}
        path: ${{ github.workspace }}/wheelhouse/*.whl


  show-artifacts:
    needs: [build_bdist]
    name: "Show artifacts"
    runs-on: ubuntu-latest
    steps:
    - uses: actions/download-artifact@634f93cb2916e3fdff6788551b99b062d0335ce0  # v5.0.0
      with:
        pattern: pypi-artifacts*
        path: ${{ github.workspace }}/dist
        merge-multiple: true

    - shell: bash
      run: |
        ls -l ${{ github.workspace }}/dist


  publish-artifacts-pypi:
    needs: [build_bdist]
    name: "Publish to PyPI"
    runs-on: ubuntu-latest
    environment:
      name: pypi
      url: https://pypi.org/p/ciso/
    permissions:
      id-token: write  # for trusted publishing to PyPI
      actions: read    # for downloading artifacts
    # upload to PyPI for every tag starting with 'v'
    if: github.event_name == 'push' && startsWith(github.event.ref, 'refs/tags/v')
    steps:
    - uses: actions/download-artifact@634f93cb2916e3fdff6788551b99b062d0335ce0  # v5.0.0
      with:
        pattern: pypi-artifacts*
        path: ${{ github.workspace }}/dist
        merge-multiple: true

    - name: Publish package distributions to PyPI
      if: success() && github.event_name == 'release'
      uses: pypa/gh-action-pypi-publish@76f52bc884231f62b9a034ebfe128415bbaabdfc  # v1.12.4
